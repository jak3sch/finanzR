[{"path":"https://jak3sch.github.io/finanzR/articles/kraken_staking.html","id":"einführung","dir":"Articles","previous_headings":"","what":"Einführung","title":"Kraken Staking in Portfolio Performance","text":"Diese Anleitung geht davon aus, dass du R und das Paket finanzR installiert hast. Ich empfehle, mit RStudio zu arbeiten. Wenn du bei der Installation und/oder Einführung Hilfe benötigst, gibt es hier eine Anleitung.","code":""},{"path":"https://jak3sch.github.io/finanzR/articles/kraken_staking.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Kraken Staking in Portfolio Performance","text":"Als erstes musst du die aus deinem Kraken Konto eine csv Datei herunterladen. Gehe dazu im Menü zu “History” -> “Export” und wähle im Dropdown Menü “Ledgers”. Wenn du magst, kannst du auch noch den Zeitraum der Transaktionen einschränken. Klicke anschließend auf “Submit”. Nach einer kurzen Zeit kannst du den Export mit Klick auf die drei Punkte herunterladen. Entdpacke das zip auf deinem Rechner und lege die ledgers.csv dein R Working Directory.","code":""},{"path":"https://jak3sch.github.io/finanzR/articles/kraken_staking.html","id":"import-daten-für-portfolio-performance-erzeugen","dir":"Articles","previous_headings":"","what":"Import Daten für Portfolio Performance erzeugen","title":"Kraken Staking in Portfolio Performance","text":"Anschließend wechselst du RStudio und erzeugst ein neues Dokument. Die ledgers.csv ist etwa aufgebaut, wie diese Beispieldaten. Deine Datei kannst du nun mit der Funktion pp_create_import eine pp_kraken_staking.csv umwandeln, die dein Working Directory geschrieben wird.","code":"head(ledgers, 5) #>                  time    type asset amount #> 1 2022-04-05 03:24:26 staking TRX.S   0.40 #> 2 2022-04-11 17:51:44 staking ADA.S   0.55 #> 3 2022-04-12 02:43:49 staking TRX.S  10.76 #> 4 2022-04-18 09:07:51 staking ADA.S   0.55 #> 5 2022-04-19 02:46:48 staking TRX.S  10.77 pp_create_import(\"ledgers.csv\")"},{"path":[]},{"path":"https://jak3sch.github.io/finanzR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jakob Eschler. Author, maintainer.","code":""},{"path":"https://jak3sch.github.io/finanzR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eschler J (2023). finanzR: R package personal finance management. R package version 0.1.0, https://github.com/jak3sch/finanzR.","code":"@Manual{,   title = {finanzR: R package for personal finance management},   author = {Jakob Eschler},   year = {2023},   note = {R package version 0.1.0},   url = {https://github.com/jak3sch/finanzR}, }"},{"path":"https://jak3sch.github.io/finanzR/index.html","id":"finanzr","dir":"","previous_headings":"","what":"R package for personal finance management","title":"R package for personal finance management","text":"finanzR developed personal library scripts facilitate financial tracking Portfolio Performance. Since may also help others, decided publish library. moment package early beta testing phase, extended future. suggestions find bugs, feel free create new issue. Since first R package, possible changes architecture development.","code":""},{"path":"https://jak3sch.github.io/finanzR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R package for personal finance management","text":"can install development version finanzR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jak3sch/finanzR\")"},{"path":"https://jak3sch.github.io/finanzR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R package for personal finance management","text":"detailed information, please refer documentation.","code":""},{"path":"https://jak3sch.github.io/finanzR/index.html","id":"crypto-staking-kraken","dir":"","previous_headings":"Usage","what":"Crypto Staking (Kraken)","title":"R package for personal finance management","text":"finanzR tries solve problem staking really mapped Portfolio Performance. Currently function supports staking Kraken. function takes exported ledger data Kraken. searches CoinGecko api price coin day staking transaction. creates 2 transactions Portfolio Performance: dividend purchase. Since day’s price, ’s 100% accurate, ’s better nothing.","code":"library(finanzR)  # kraken ledgers export kraken_data <- data.frame(   time = c(\"2022-04-05 03:24:26\", \"2022-04-11 17:51:44\", \"2022-04-12 02:43:49\",             \"2022-04-18 09:07:51\", \"2022-04-19 02:46:48\", \"2022-04-25 09:11:56\",             \"2022-04-26 02:48:12\"),    type = \"staking\",   asset = c(\"TRX.S\", \"ADA.S\", \"TRX.S\", \"ADA.S\", \"TRX.S\", \"ADA.S\", \"TRX.S\"),   amount = c(0.4, 0.55, 10.76, 0.55, 10.77, 0.55, 10.79) )  staking_data <- finanzR::kraken_staking(input = kraken_data, input_type = \"data.frame\")  print(staking_data) #> # A tibble: 14 × 6 #>    date       time     type      symbol  amount  price #>    <date>     <chr>    <chr>     <chr>    <dbl>  <dbl> #>  1 2022-04-05 03:24:26 Dividende TRX/EUR   0.4  0.0645 #>  2 2022-04-11 17:51:44 Dividende ADA/EUR   0.55 0.954  #>  3 2022-04-12 02:43:49 Dividende TRX/EUR  10.8  0.0535 #>  4 2022-04-18 09:07:51 Dividende ADA/EUR   0.55 0.856  #>  5 2022-04-19 02:46:48 Dividende TRX/EUR  10.8  0.0571 #>  6 2022-04-25 09:11:56 Dividende ADA/EUR   0.55 0.820  #>  7 2022-04-26 02:48:12 Dividende TRX/EUR  10.8  0.0610 #>  8 2022-04-05 03:24:26 Kauf      TRX/EUR   0.4  0.0645 #>  9 2022-04-11 17:51:44 Kauf      ADA/EUR   0.55 0.954  #> 10 2022-04-12 02:43:49 Kauf      TRX/EUR  10.8  0.0535 #> 11 2022-04-18 09:07:51 Kauf      ADA/EUR   0.55 0.856  #> 12 2022-04-19 02:46:48 Kauf      TRX/EUR  10.8  0.0571 #> 13 2022-04-25 09:11:56 Kauf      ADA/EUR   0.55 0.820  #> 14 2022-04-26 02:48:12 Kauf      TRX/EUR  10.8  0.0610"},{"path":"https://jak3sch.github.io/finanzR/reference/all_coins.html","id":null,"dir":"Reference","previous_headings":"","what":"Load all supported Coins — all_coins","title":"Load all supported Coins — all_coins","text":"Load supported crypto coins CoinGecko API via geckor package.","code":""},{"path":"https://jak3sch.github.io/finanzR/reference/all_coins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load all supported Coins — all_coins","text":"","code":"all_coins()"},{"path":"https://jak3sch.github.io/finanzR/reference/all_coins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load all supported Coins — all_coins","text":"tibble three columns: coin_id (character): coin IDs, ordered alphabetically; symbol (character): coin symbols; name (character): common names coins;","code":""},{"path":"https://jak3sch.github.io/finanzR/reference/all_coins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load all supported Coins — all_coins","text":"","code":"r <- all_coins() head(r, 10) #> # A tibble: 10 × 3 #>    coin_id                  symbol name                      #>    <chr>                    <chr>  <chr>                     #>  1 01coin                   zoc    01coin                    #>  2 0chain                   zcn    Zus                       #>  3 0x                       zrx    0x                        #>  4 0x0-ai-ai-smart-contract 0x0    0x0.ai: AI Smart Contract #>  5 0xcert                   zxc    0xcert                    #>  6 0xdao                    oxd    0xDAO                     #>  7 0xdao-v2                 oxd v2 0xDAO V2                  #>  8 0xmonero                 0xmr   0xMonero                  #>  9 0xpad                    0xpad  0xPAD                     #> 10 0xtrade                  0xt    0xTrade"},{"path":"https://jak3sch.github.io/finanzR/reference/kraken_staking.html","id":null,"dir":"Reference","previous_headings":"","what":"Load coin values for Kraken staking — kraken_staking","title":"Load coin values for Kraken staking — kraken_staking","text":"Adds coin values CoinGecko API Kraken staking transactions","code":""},{"path":"https://jak3sch.github.io/finanzR/reference/kraken_staking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load coin values for Kraken staking — kraken_staking","text":"","code":"kraken_staking(input, base_currency = \"eur\", input_type = \"file\")"},{"path":"https://jak3sch.github.io/finanzR/reference/kraken_staking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load coin values for Kraken staking — kraken_staking","text":"input string path exported Kraken ledgers data data.frame strucutre kraken ledgers export. base_currency string prefered currency coin value returned. One c(\"eur\", \"usd\"). result imported Portfolio Performance, base currency set . input_type string defines kind input passing. passing exported ledgers.csv Kraken data needs columns time, type, asset amount.","code":""},{"path":"https://jak3sch.github.io/finanzR/reference/kraken_staking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load coin values for Kraken staking — kraken_staking","text":"tibble following columns: date (date): date staking transaction; time (character) time staking transaction; type (character): staking; asset (character): Kraken coin abbreviation; amount (double): amount staked coins; fee (double): transaction fee; price (double): coin price base_currency, date; currency (character): currency coin value;","code":""},{"path":"https://jak3sch.github.io/finanzR/reference/kraken_staking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load coin values for Kraken staking — kraken_staking","text":"","code":"kraken_data <- data.frame(   time = c(\"2022-04-05 03:24:26\", \"2022-04-11 17:51:44\", \"2022-04-12 02:43:49\",          \"2022-04-18 09:07:51\", \"2022-04-19 02:46:48\", \"2022-04-25 09:11:56\",          \"2022-04-26 02:48:12\"),   type = \"staking\",   asset = c(\"TRX.S\", \"ADA.S\", \"TRX.S\", \"ADA.S\", \"TRX.S\", \"ADA.S\", \"TRX.S\"),   amount = c(0.4, 0.55, 10.76, 0.55, 10.77, 0.55, 10.79) )  r <- kraken_staking(kraken_data, input_type = \"data.frame\") head(r, 10) #> # A tibble: 7 × 7 #>   date       time     type    asset amount  price currency #>   <date>     <chr>    <chr>   <chr>  <dbl>  <dbl> <chr>    #> 1 2022-04-05 03:24:26 staking trx     0.4  0.0645 eur      #> 2 2022-04-11 17:51:44 staking ada     0.55 0.954  eur      #> 3 2022-04-12 02:43:49 staking trx    10.8  0.0535 eur      #> 4 2022-04-18 09:07:51 staking ada     0.55 0.856  eur      #> 5 2022-04-19 02:46:48 staking trx    10.8  0.0571 eur      #> 6 2022-04-25 09:11:56 staking ada     0.55 0.820  eur      #> 7 2022-04-26 02:48:12 staking trx    10.8  0.0610 eur"},{"path":"https://jak3sch.github.io/finanzR/reference/pp_create_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Create import file for Portfolio Performance — pp_create_import","title":"Create import file for Portfolio Performance — pp_create_import","text":"function creates file pp_kraken_staking.csv current working directory. file can imported Kraken. IMPORTANT import dialog define correct formatting Wert, Stueck Gebuehr","code":""},{"path":"https://jak3sch.github.io/finanzR/reference/pp_create_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create import file for Portfolio Performance — pp_create_import","text":"","code":"pp_create_import(type, input)"},{"path":"https://jak3sch.github.io/finanzR/reference/pp_create_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create import file for Portfolio Performance — pp_create_import","text":"type Currently \"kraken_staking\". Performs kraken_staking, pp_rename_columns write_csv input String file path. Currently needs Kraken ledgers.csv export","code":""},{"path":"https://jak3sch.github.io/finanzR/reference/pp_rename_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns for Portfolio Performance import — pp_rename_columns","title":"Rename columns for Portfolio Performance import — pp_rename_columns","text":"Translates tibble column names Portfolio Performance import.","code":""},{"path":"https://jak3sch.github.io/finanzR/reference/pp_rename_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns for Portfolio Performance import — pp_rename_columns","text":"","code":"pp_rename_columns(df, lang = \"de\")"},{"path":"https://jak3sch.github.io/finanzR/reference/pp_rename_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns for Portfolio Performance import — pp_rename_columns","text":"df tibble. Currently optimized Kraken ledgers export. lang Currently \"de\".","code":""},{"path":"https://jak3sch.github.io/finanzR/reference/write_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to local csv file — write_csv","title":"Write to local csv file — write_csv","text":"Write data local csv file","code":""},{"path":"https://jak3sch.github.io/finanzR/reference/write_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to local csv file — write_csv","text":"","code":"write_csv(df, output)"},{"path":"https://jak3sch.github.io/finanzR/reference/write_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to local csv file — write_csv","text":"df data stored csv file output string path filename","code":""}]
